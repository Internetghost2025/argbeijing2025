/* 基本页面设置 */
body {
    background-color: #000000;
    color: #ffffff;
    margin: 0;
    padding: 0;
    min-height: 100vh;
    display: flex; /* 用于后续可能的内容居中 */
    justify-content: center;
    align-items: center;
    font-family: 'Microsoft YaHei', '微软雅黑', sans-serif;
    overflow: hidden; /* 防止任何元素溢出 */
    text-align: center;
}

/* Particle container - fixed background */
#tsparticles {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: -1; /* 确保在最底层 */
}

/* Preloader Styles */
#preloader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000; /* 覆盖初始背景 */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 100; /* 在最顶层 */
    opacity: 1;
    transition: opacity 0.5s ease-out; /* 渐隐效果 */
}

.spinner {
    border: 4px solid rgba(255, 255, 255, 0.3); /* 浅灰色边框 */
    border-left-color: #ffffff; /* 白色，表示旋转 */
    border-radius: 50%;
    width: 50px;
    height: 50px;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

/* Main content wrapper (initially hidden) */
#main-content.hidden {
    opacity: 0;
    pointer-events: none; /* 防止在隐藏时交互 */
}
#main-content {
    opacity: 1;
    transition: opacity 0.5s ease-in; /* 渐显效果 */
    width: 100%; /* 确保宽度 */
    z-index: 10; /* 在粒子之上 */
    position: relative; /* 确保z-index生效 */
}


.container { /* 重用之前的容器，用于居中 */
    position: relative;
    width: 100%;
    height: 100%; /* 可能需要调整，取决于内容高度 */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 20px; /* 给内容一些边距 */
    box-sizing: border-box; /* 让padding不影响整体宽度 */
}

/* 主要标题 - 增加辉光效果 */
#main-title {
    font-size: 4em;
    font-weight: bold;
    margin-bottom: 50px;
    opacity: 0;
    transform: scale(0.5);
    animation: pop-in 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
    /* 延迟需要在JS中控制，相对于main-content出现后 */
    /* 我们在JS中处理启动时机，这里不需要 animation-delay */
    z-index: 10;
    position: relative;
    /* 辉光效果: 多层阴影叠加 */
    text-shadow: 0 0 8px rgba(255, 255, 255, 0.5), /* 内层柔和白光 */
                 0 0 15px rgba(255, 255, 255, 0.4), /* 中层白光 */
                 0 0 25px rgba(0, 180, 255, 0.3); /* 外层淡蓝色辉光 (可选) */
}

/* 弹出动画 (保持不变) */
@keyframes pop-in {
    0% { opacity: 0; transform: scale(0.5); }
    100% { opacity: 1; transform: scale(1); }
}

/* 周围文字容器 */
#surrounding-texts {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 5;
}

/* 各国语言文字样式和动画 */
.lang-text {
    position: absolute;
    font-size: 0.9em;
    opacity: 0;
    color: rgba(255, 255, 255, 0.6); /* 略微调低透明度 */
    transition: opacity 2.5s ease-in;
}
/* 位置保持不变，你仍然可以调整 */
.lang1 { top: 20%; left: 30%; transform: rotate(-15deg); }
.lang2 { top: 30%; left: 70%; transform: rotate(10deg); }
.lang3 { top: 75%; left: 25%; transform: rotate(5deg); }
.lang4 { top: 65%; left: 65%; transform: rotate(-5deg); }
.lang5 { top: 40%; left: 15%; transform: rotate(20deg); }
.lang6 { top: 80%; left: 55%; transform: rotate(-10deg); }
.lang7 { top: 15%; left: 60%; transform: rotate(15deg); }
.lang8 { top: 55%; left: 80%; transform: rotate(-25deg); }

/* 红色按钮 - 增强交互效果 */
#reveal-button {
    background-color: #c00; /* 稍微深一点的红色 */
    color: white;
    border: 1px solid #ff4444; /* 添加一个细微的亮红色边框 */
    padding: 15px 35px; /* 稍微宽一点 */
    font-size: 1.3em;
    border-radius: 5px;
    cursor: pointer;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out, background-color 0.3s ease, box-shadow 0.3s ease; /* 添加过渡效果 */
    margin-top: 40px;
    z-index: 15;
    position: relative;
    box-shadow: 0 0 10px rgba(255, 0, 0, 0.3); /* 添加红色辉光 */
}
#reveal-button:hover {
    background-color: #ff0000; /* 悬停时变亮 */
    transform: translateY(18px) scale(1.03); /* 轻微上移和放大 */
    box-shadow: 0 0 15px rgba(255, 0, 0, 0.6); /* 辉光增强 */
}
#reveal-button:active {
    background-color: #a00; /* 点击时变暗 */
    transform: translateY(20px) scale(0.98); /* 轻微下压和缩小 */
    box-shadow: 0 0 5px rgba(255, 0, 0, 0.4); /* 辉光减弱 */
}

/* 线索文本 - 无打字机效果版本 */
#clue-text {
    margin-top: 25px;
    font-size: 1.6em; 
    color: #f0e68c; /* 线索用淡黄色 */
    opacity: 0; /* 初始隐藏 */
    transition: opacity 1s ease-in; /* 保留渐显效果 */
    z-index: 15;
    position: relative;
    font-family: 'Courier New', Courier, monospace; /* 保留等宽字体 */
    letter-spacing: 3px; /* 保留字母间距 */
    min-height: 1.2em; /* 保留预留空间 */
    display: inline-block; /* 让链接块化，但保持行内特性 */
    /* 确保打字机相关样式被移除或注释掉 */
    /* border-right: ...; */
    /* animation: ...; */
    /* white-space: ...; */
    /* overflow: ...; */
    /* padding-right: ...; */
}

/* 确保 @keyframes blink 规则被移除或注释掉 */
/* 
@keyframes blink {
    from, to { border-color: transparent; }
    50% { border-color: rgba(255, 255, 255, 0.75); }
}
*/

/* 为 #clue-text 内部的链接添加样式 */
#clue-text a {
    color: #a4d8f0; /* 链接用醒目的浅蓝色 */
    text-decoration: underline; /* 添加下划线，明确是链接 */
    font-weight: bold; /* 加粗 */
    transition: color 0.3s ease, text-shadow 0.3s ease; /* 添加过渡效果 */
     /* 给链接本身也加点辉光，使其更醒目 */
    text-shadow: 0 0 5px rgba(164, 216, 240, 0.5); 
}

#clue-text a:hover {
    color: #ffffff; /* 鼠标悬停时变白色 */
    text-decoration: none; /* 悬停时移除下划线 (可选) */
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.7); /* 悬停时辉光增强 */
}

/* 用于JS控制可见性 */
.visible {
    opacity: 1 !important;
    transform: translateY(0) !important;
}
.surrounding-visible {
     opacity: 0.6 !important;
}
.hidden {
    opacity: 0 !important;
    pointer-events: none !important; /* 确保彻底隐藏 */
}